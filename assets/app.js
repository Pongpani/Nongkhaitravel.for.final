window.NKT = window.NKT || {};(function () {  const STORAGE_KEY = "nkt_places_th_multi";  function loadPlaces() {    const raw = localStorage.getItem(STORAGE_KEY);    if (raw) { try { return JSON.parse(raw); } catch {} }    return window.NKT.DEFAULT_PLACES.slice();  }  function savePlaces(list){ localStorage.setItem(STORAGE_KEY, JSON.stringify(list)); }  function ensureSeeded(){ if(!localStorage.getItem(STORAGE_KEY)){ savePlaces(window.NKT.DEFAULT_PLACES); } }  function initIndex(){    ensureSeeded();    const grid = document.getElementById("cardsGrid");    const tabs = document.getElementById("catTabs");    let places = loadPlaces();    let cat = "";    function firstImg(p){      if (Array.isArray(p.imgs) && p.imgs.length) return p.imgs[0];      return p.img || 'https://placehold.co/1200x800?text=Photo';    }    function render(list){      grid.innerHTML = "";      list.forEach(p => {        const el = document.createElement("article");        el.className = "card";        el.innerHTML = `          <img class="media" src="${firstImg(p)}" alt="${p.name}">          <div class="body">            <h3><a href="place.html?id=${encodeURIComponent(p.id)}">${p.name}</a></h3>            <p>${p.desc || ""}</p>            <div class="meta"><span class="chip">${p.category||'-'}</span><span>${p.subdistrict||''}</span></div>          </div>          <div class="actions">            <a class="btn outline" target="_blank" rel="noreferrer" href="${p.map_place || p.map || '#'}">แผนที่</a>            <a class="btn" href="place.html?id=${encodeURIComponent(p.id)}">อ่านเพิ่มเติม</a>          </div>`;        grid.appendChild(el);      });    }    function filter(){      const result = places.filter(p => !cat || p.category === cat);      render(result);    }    tabs?.addEventListener("click", e => {      const b = e.target.closest(".tab");      if(!b) return;      tabs.querySelectorAll(".tab").forEach(x => x.classList.remove("active"));      b.classList.add("active");      cat = b.dataset.cat || "";      filter();    });    window.NKT.refreshUI = () => render(places);    render(places);  }  function renderPlaceDetail(){    ensureSeeded();    const params = new URLSearchParams(location.search);    const id = params.get("id");    const list = loadPlaces();    const p = list.find(x => x.id === id) || list[0];    if(!p) return;    const media = document.getElementById("mediaBox");    media.innerHTML = "";    if (Array.isArray(p.imgs) && p.imgs.length > 1) {      const grid = document.createElement("div");      grid.className = "gallery";      p.imgs.forEach(src => {        const im = document.createElement("img");        im.src = src;        im.alt = p.name;        grid.appendChild(im);      });      media.appendChild(grid);    } else {      const im = document.createElement("img");      im.className = "cover";      im.src = (p.imgs && p.imgs[0]) || p.img || "";      im.alt = p.name || "";      media.appendChild(im);    }    const $ = id => document.getElementById(id);    $("placeName").textContent = p.name || "-";    $("placeDesc").textContent = p.desc || "";    $("placeHistory").textContent = p.history || "-";    $("placeCat").textContent = p.category || "-";    $("placeSub").textContent = p.subdistrict || "-";    $("placeHours").textContent = p.hours || "-";    $("placeFee").textContent = p.fee || "-";    $("placeAddr").textContent = p.address || "-";    document.getElementById("placeMap").src = p.map || "";    const mapLink = document.getElementById("mapLink");    mapLink.href = p.map_place || p.map || "#";  }  function initAdmin(){    ensureSeeded();    const form = document.getElementById("placeForm");    const list = document.getElementById("adminList");    const idF = document.getElementById("idField");    const nameF = document.getElementById("nameField");    const catF = document.getElementById("categoryField");    const subF = document.getElementById("subdistrictField");    const descF = document.getElementById("descField");    const addrF = document.getElementById("addrField");    const hoursF = document.getElementById("hoursField");    const feeF = document.getElementById("feeField");    const historyF = document.getElementById("historyField");    const imgF = document.getElementById("imgField");    let imgFileF = document.getElementById("imgFileField");    const mapF = document.getElementById("mapField");    const resetBtn = document.getElementById("resetFormBtn");
    // Ensure file upload UI exists and hide old link field; add preview styles
    (function(){
      const style = document.createElement('style');
      style.textContent = '.preview-grid{display:flex;flex-wrap:wrap;gap:8px;margin:6px 0}.preview-grid img{width:72px;height:72px;object-fit:cover;border-radius:8px;border:1px solid var(--border)}';
      document.head && document.head.appendChild(style);
    })();
    if (!imgFileF) {
      const file = document.createElement('input');
      file.type = 'file'; file.multiple = true; file.accept = 'image/*'; file.id = 'imgFileField';
      const label = document.createElement('label');
      label.appendChild(document.createTextNode('Upload images (files) '));
      label.appendChild(file);
      const preview = document.createElement('div'); preview.id = 'imgPreview'; preview.className = 'preview-grid';
      const anchor = imgF && imgF.closest ? imgF.closest('label') : null;
      if (anchor && anchor.parentElement) {
        anchor.insertAdjacentElement('afterend', label);
        label.insertAdjacentElement('afterend', preview);
        try { anchor.style.display = 'none'; } catch {}
      } else {
        const formEl = document.getElementById('placeForm');
        formEl && formEl.appendChild(label);
        label.insertAdjacentElement('afterend', preview);
      }
      imgFileF = file;
    } else {
      if (imgF && imgF.closest) { try { imgF.closest('label').style.display = 'none'; } catch {} }
      if (!document.getElementById('imgPreview')) {
        const preview = document.createElement('div'); preview.id = 'imgPreview'; preview.className = 'preview-grid';
        imgFileF.insertAdjacentElement('afterend', preview);
      }
    }
    const previewEl = document.getElementById('imgPreview');    let places = loadPlaces();    let uploadedImgs = [];    function readFilesAsDataURLs(files){      uploadedImgs = [];      if(!files || !files.length) return Promise.resolve([]);      const tasks = Array.from(files).map(file => new Promise((resolve) => {        const reader = new FileReader();        reader.onload = () => { uploadedImgs.push(reader.result); resolve(reader.result); };        reader.onerror = () => resolve(null);        reader.readAsDataURL(file);      }));      return Promise.all(tasks);    }    function slugify(s){ return (s||'').toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g,'').replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,''); }    function clear(){ idF.value=""; form.reset(); uploadedImgs = []; if (previewEl) previewEl.innerHTML = ""; }    function render(){      places = loadPlaces();      list.innerHTML = "";      places.forEach(p => {        const row = document.createElement("div");        row.className = "admin-item";        row.innerHTML = `<div><strong>${p.name}</strong><br><small>${p.category} • ${p.subdistrict||'-'}</small></div>          <button class="btn outline" data-edit="${p.id}">แก้ไข</button>          <button class="btn" data-del="${p.id}">ลบ</button>`;        list.appendChild(row);        row.querySelector("[data-edit]").addEventListener("click", () => edit(p.id));        row.querySelector("[data-del]").addEventListener("click", () => del(p.id));      });    }    function edit(id){      const p = places.find(x => x.id === id); if(!p) return;      idF.value = p.id;      nameF.value = p.name||"";      catF.value = p.category||"ที่เที่ยว";      subF.value = p.subdistrict||"";      descF.value = p.desc||"";      addrF.value = p.address||"";      hoursF.value = p.hours||"";      feeF.value = p.fee||"";      historyF.value = p.history||"";      const imgs = Array.isArray(p.imgs) ? p.imgs.join(", ") : (p.img||"");      imgF.value = imgs;      mapF.value = p.map_place || p.map || "";      if (imgFileF) { imgFileF.value = ""; }      uploadedImgs = [];      const _arr = Array.isArray(p.imgs) ? p.imgs.slice() : (p.img ? [p.img] : []); if (typeof renderPreview === "function") renderPreview(_arr); window.scrollTo({top:0, behavior:"smooth"});    }    function del(id){      if(!confirm("ลบรายการนี้?")) return;      places = places.filter(x => x.id !== id);      savePlaces(places); render();    }    function parseImgs(s){      if(!s) return [];      return s.split(",").map(x => x.trim()).filter(Boolean);    }
    function renderPreview(arr){
  if (!previewEl) return;
  previewEl.innerHTML = '';
  (arr||[]).forEach(src => { const im = document.createElement('img'); im.src = src; im.alt = 'preview'; previewEl.appendChild(im); });
}    function submit(e){      e.preventDefault();      const imgsArr = parseImgs((imgF && imgF.value) || "").concat(uploadedImgs);      const payload = {        id: idF.value || slugify(nameF.value)+'-'+Date.now().toString(36),        name: nameF.value.trim(),        category: catF.value,        subdistrict: subF.value.trim(),        desc: descF.value.trim(),        address: addrF.value.trim(),        hours: hoursF.value.trim(),        fee: feeF.value.trim(),        history: historyF.value.trim(),        img: imgsArr[0] || "",        imgs: imgsArr,        map: /output=embed/.test(mapF.value) ? mapF.value : (mapF.value ? mapF.value + "&output=embed" : ""),        map_place: mapF.value.replace("&output=embed","")      };      const i = places.findIndex(x => x.id === payload.id);      if(i>=0) places[i] = Object.assign(places[i], payload); else places.unshift(payload);      savePlaces(places); clear(); render(); alert("บันทึกสำเร็จ");    }    form.addEventListener("submit", submit);    imgFileF && imgFileF.addEventListener("change", (e) => { readFilesAsDataURLs(e.target.files).then(()=>{ if (typeof renderPreview === "function") { renderPreview(parseImgs((imgF && imgF.value) || "").concat(uploadedImgs)); } }); });    resetBtn.addEventListener("click", clear);    render();  }  window.NKT.initIndex = initIndex;  window.NKT.renderPlaceDetail = renderPlaceDetail;  window.NKT.initAdmin = initAdmin;  document.addEventListener("DOMContentLoaded", () => {    if(document.getElementById("cardsGrid")) initIndex();  });})();